/* generate spacing */
@mixin generate-spacing($prefix, $property) {
  $sizes: 0, 4, 8, 12, 16, 24, 32, 48;
  $spacing: 0.0625rem;
  @for $i from 1 through length($sizes) {
    $size: nth($sizes, $i);

    .#{$prefix}-#{$size} {
      #{$property}: $spacing * $size;
    }
  }
}

@mixin generate-spacing-plus($prefix, $property1, $property2) {
  $sizes: 0, 4, 8, 12, 16, 24, 32, 48;
  $spacing: 0.0625rem;
  @for $i from 1 through length($sizes) {
    $size: nth($sizes, $i);

    .#{$prefix}-#{$size} {
      #{$property1}: $spacing * $size;
      #{$property2}: $spacing * $size;
    }
  }
}

/* generate display class */
@mixin generate-display() {
  $displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex;
  @for $i from 1 through length($displays) {
    $value: nth($displays, $i);

    .hcis-#{$value} {
      display: $value;
    }
  }
}

/* Media breakpoint */
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($next, $breakpoints) {
      @content;
    }
  }
}
